{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alex0\\\\Desktop\\\\SHA-C22-1\\\\Week20\\\\FullStack-Overview\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// Import necessary components and libraries\nimport AddTodo from \"./components/AddForm\";\nimport TodoList from \"./components/TodoList\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [todos] = useState([]);\n\n  // Function to get all the tasks from the database\n  async function getAllTodos() {\n    try {\n      await axios.get(\"http://localhost:8000/todos\").then(res => setTodos(res.data));\n      console.log(todos);\n    } catch (error) {\n      console.log(error);\n    }\n\n    // Your code to fetch todos from the database should go here\n  }\n  ;\n  // Render all the tasks on the screen once you open the app\n  async function AddNewTask(task) {\n    let newTas = {\n      taskName: task,\n      status: false\n    };\n    try {\n      await axios.post(\"http://localhost:8000/todos/create\", newTas).then(res => {\n        setTodos(res.data.newTas);\n        console.log(todos);\n      });\n    } catch (error) {\n      console.log(error);\n    }\n    ;\n    setTodos([...todos, newTas]);\n  }\n  ;\n  // Render all the tasks on the screen once you open the app\n  useEffect(() => {\n    // Call the getAllTodos function here to populate the initial todos\n    getAllTodos();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddTodo, {\n      getAllTodos: getAllTodos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      todos: todos,\n      getAllTodos: getAllTodos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"bLJB+QA34XL6b9qMjEy0wxfXrMQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["AddTodo","TodoList","useEffect","useState","jsxDEV","_jsxDEV","App","_s","todos","getAllTodos","axios","get","then","res","setTodos","data","console","log","error","AddNewTask","task","newTas","taskName","status","post","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/alex0/Desktop/SHA-C22-1/Week20/FullStack-Overview/client/src/App.js"],"sourcesContent":["// Import necessary components and libraries\r\nimport AddTodo from \"./components/AddForm\";\r\nimport TodoList from \"./components/TodoList\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\n\r\nfunction App() {\r\n  const [todos] = useState([]);\r\n\r\n  // Function to get all the tasks from the database\r\n  async function getAllTodos() {\r\n    try {\r\n      await axios.get(\"http://localhost:8000/todos\")\r\n      .then((res) => setTodos(res.data));\r\n      console.log(todos);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n\r\n    // Your code to fetch todos from the database should go here\r\n  };\r\n  // Render all the tasks on the screen once you open the app\r\n  async function AddNewTask(task) {\r\n    let newTas = {\r\n      taskName: task,\r\n      status:false,\r\n    };\r\n    try {\r\n      await axios.post(\"http://localhost:8000/todos/create\", newTas)\r\n      .then((res) => { \r\n      setTodos(res.data.newTas)\r\n      console.log(todos)})\r\n    } catch (error) {\r\n      console.log(error);\r\n    };\r\n\r\n    setTodos([...todos, newTas]);\r\n    };\r\n  // Render all the tasks on the screen once you open the app\r\n  useEffect(() => {\r\n    // Call the getAllTodos function here to populate the initial todos\r\n    getAllTodos();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Todo App</h1>\r\n      <AddTodo getAllTodos={getAllTodos} />\r\n      <TodoList todos={todos} getAllTodos={getAllTodos} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA;AACA,OAAOA,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG5C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;;EAE5B;EACA,eAAeM,WAAWA,CAAA,EAAG;IAC3B,IAAI;MACF,MAAMC,KAAK,CAACC,GAAG,CAAC,6BAA6B,CAAC,CAC7CC,IAAI,CAAEC,GAAG,IAAKC,QAAQ,CAACD,GAAG,CAACE,IAAI,CAAC,CAAC;MAClCC,OAAO,CAACC,GAAG,CAACT,KAAK,CAAC;IACpB,CAAC,CAAC,OAAOU,KAAK,EAAE;MACdF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;IACpB;;IAEA;EACF;EAAC;EACD;EACA,eAAeC,UAAUA,CAACC,IAAI,EAAE;IAC9B,IAAIC,MAAM,GAAG;MACXC,QAAQ,EAAEF,IAAI;MACdG,MAAM,EAAC;IACT,CAAC;IACD,IAAI;MACF,MAAMb,KAAK,CAACc,IAAI,CAAC,oCAAoC,EAAEH,MAAM,CAAC,CAC7DT,IAAI,CAAEC,GAAG,IAAK;QACfC,QAAQ,CAACD,GAAG,CAACE,IAAI,CAACM,MAAM,CAAC;QACzBL,OAAO,CAACC,GAAG,CAACT,KAAK,CAAC;MAAA,CAAC,CAAC;IACtB,CAAC,CAAC,OAAOU,KAAK,EAAE;MACdF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;IACpB;IAAC;IAEDJ,QAAQ,CAAC,CAAC,GAAGN,KAAK,EAAEa,MAAM,CAAC,CAAC;EAC5B;EAAC;EACH;EACAnB,SAAS,CAAC,MAAM;IACd;IACAO,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEJ,OAAA;IAAKoB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBrB,OAAA;MAAAqB,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBzB,OAAA,CAACL,OAAO;MAACS,WAAW,EAAEA;IAAY;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrCzB,OAAA,CAACJ,QAAQ;MAACO,KAAK,EAAEA,KAAM;MAACC,WAAW,EAAEA;IAAY;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjD,CAAC;AAEV;AAACvB,EAAA,CA7CQD,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AA+CZ,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}