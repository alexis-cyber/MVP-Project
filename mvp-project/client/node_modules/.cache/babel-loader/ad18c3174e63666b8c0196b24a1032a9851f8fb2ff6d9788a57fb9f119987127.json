{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alex0\\\\Desktop\\\\SHA-C22-1\\\\Week20\\\\FullStack-Overview\\\\client\\\\src\\\\components\\\\AddForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddTodo({\n  getAllTodos\n}) {\n  _s();\n  const [todo, setTodo] = useState({\n    text: \"\",\n    status: false // Assuming you want the default status to be false\n  });\n\n  // Handle input change when user types in a new task\n  function handleInputChange(e) {\n    setTodo({\n      ...todo,\n      text: e.target.value\n    });\n  }\n\n  // Function to add a new task\n  const addNewTodo = e => {\n    e.preventDefault();\n    axios.post(\"http://localhost:8000/todos/create\", todo).then(res => {\n      console.log(res.data);\n      // Call the function to update the user interface immediately without refreshing the page\n      getAllTodos();\n      setTodo({\n        ...todo,\n        text: \"\"\n      }); // Clear the input field after adding a todo\n    }).catch(error => console.log(error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Add a task...\",\n      onChange: handleInputChange,\n      value: todo.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"addbtn\",\n      onClick: addNewTodo,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(AddTodo, \"jhwPIk86tTpXTTOpaiAFKGKSSHM=\");\n_c = AddTodo;\nexport default AddTodo;\nvar _c;\n$RefreshReg$(_c, \"AddTodo\");","map":{"version":3,"names":["useState","axios","jsxDEV","_jsxDEV","AddTodo","getAllTodos","_s","todo","setTodo","text","status","handleInputChange","e","target","value","addNewTodo","preventDefault","post","then","res","console","log","data","catch","error","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","id","onClick","_c","$RefreshReg$"],"sources":["C:/Users/alex0/Desktop/SHA-C22-1/Week20/FullStack-Overview/client/src/components/AddForm.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./style.css\";\r\n\r\nfunction AddTodo({ getAllTodos }) {\r\n  const [todo, setTodo] = useState({\r\n    text: \"\",\r\n    status: false // Assuming you want the default status to be false\r\n  });\r\n\r\n  // Handle input change when user types in a new task\r\n  function handleInputChange(e) {\r\n    setTodo({ ...todo, text: e.target.value });\r\n  }\r\n\r\n  // Function to add a new task\r\n  const addNewTodo = (e) => {\r\n    e.preventDefault();\r\n    axios\r\n      .post(\"http://localhost:8000/todos/create\", todo)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        // Call the function to update the user interface immediately without refreshing the page\r\n        getAllTodos();\r\n        setTodo({ ...todo, text: \"\" }); // Clear the input field after adding a todo\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Add a task...\"\r\n        onChange={handleInputChange}\r\n        value={todo.text}\r\n      />\r\n      <button id=\"addbtn\" onClick={addNewTodo}>+</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddTodo;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,SAASC,OAAOA,CAAC;EAAEC;AAAY,CAAC,EAAE;EAAAC,EAAA;EAChC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC;IAC/BS,IAAI,EAAE,EAAE;IACRC,MAAM,EAAE,KAAK,CAAC;EAChB,CAAC,CAAC;;EAEF;EACA,SAASC,iBAAiBA,CAACC,CAAC,EAAE;IAC5BJ,OAAO,CAAC;MAAE,GAAGD,IAAI;MAAEE,IAAI,EAAEG,CAAC,CAACC,MAAM,CAACC;IAAM,CAAC,CAAC;EAC5C;;EAEA;EACA,MAAMC,UAAU,GAAIH,CAAC,IAAK;IACxBA,CAAC,CAACI,cAAc,CAAC,CAAC;IAClBf,KAAK,CACFgB,IAAI,CAAC,oCAAoC,EAAEV,IAAI,CAAC,CAChDW,IAAI,CAAEC,GAAG,IAAK;MACbC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACG,IAAI,CAAC;MACrB;MACAjB,WAAW,CAAC,CAAC;MACbG,OAAO,CAAC;QAAE,GAAGD,IAAI;QAAEE,IAAI,EAAE;MAAG,CAAC,CAAC,CAAC,CAAC;IAClC,CAAC,CAAC,CACDc,KAAK,CAAEC,KAAK,IAAKJ,OAAO,CAACC,GAAG,CAACG,KAAK,CAAC,CAAC;EACzC,CAAC;EAED,oBACErB,OAAA;IAAAsB,QAAA,gBACEtB,OAAA;MACEuB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,eAAe;MAC3BC,QAAQ,EAAEjB,iBAAkB;MAC5BG,KAAK,EAAEP,IAAI,CAACE;IAAK;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC,eACF7B,OAAA;MAAQ8B,EAAE,EAAC,QAAQ;MAACC,OAAO,EAAEnB,UAAW;MAAAU,QAAA,EAAC;IAAC;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChD,CAAC;AAEV;AAAC1B,EAAA,CApCQF,OAAO;AAAA+B,EAAA,GAAP/B,OAAO;AAsChB,eAAeA,OAAO;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}