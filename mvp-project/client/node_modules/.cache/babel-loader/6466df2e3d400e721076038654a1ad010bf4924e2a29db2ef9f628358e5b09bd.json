{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alex0\\\\Desktop\\\\SHA-C22-1\\\\Week20\\\\FullStack-Overview\\\\client\\\\src\\\\components\\\\AddForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddTodo({\n  getAllTodos\n}) {\n  _s();\n  const [todo, setTodo] = useState({\n    text: \"\",\n    status: \"pending\"\n  });\n\n  // Handle input change when user types in a new task\n  function handleInputChange(e) {\n    setTodo({\n      ...todo,\n      text: e.target.value\n    });\n  }\n\n  // Function to add a new task\n  const addNewTodo = async () => {\n    try {\n      // Add your logic here to send a request to add a new todo to the database\n      const response = await fetch(\"/api/todos\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(todo)\n      });\n      if (response.ok) {\n        // Call the function to update the user interface immediately without refreshing the page\n        getAllTodos();\n        setTodo({\n          text: \"\",\n          status: \"pending\"\n        }); // Clear input field after adding todo\n      } else {\n        console.error(\"Failed to add todo\");\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Add a task...\",\n      onChange: handleInputChange,\n      value: todo.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addNewTodo,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(AddTodo, \"z4aazDT/SWpA1itTEwwBSV1kBOw=\");\n_c = AddTodo;\nexport default AddTodo;\nvar _c;\n$RefreshReg$(_c, \"AddTodo\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","AddTodo","getAllTodos","_s","todo","setTodo","text","status","handleInputChange","e","target","value","addNewTodo","response","fetch","method","headers","body","JSON","stringify","ok","console","error","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/alex0/Desktop/SHA-C22-1/Week20/FullStack-Overview/client/src/components/AddForm.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nfunction AddTodo({ getAllTodos }) {\r\n  const [todo, setTodo] = useState({\r\n    text: \"\",\r\n    status: \"pending\",\r\n  });\r\n\r\n  // Handle input change when user types in a new task\r\n  function handleInputChange(e) {\r\n    setTodo({ ...todo, text: e.target.value });\r\n  }\r\n\r\n  // Function to add a new task\r\n  const addNewTodo = async () => {\r\n    try {\r\n      // Add your logic here to send a request to add a new todo to the database\r\n      const response = await fetch(\"/api/todos\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(todo),\r\n      });\r\n\r\n      if (response.ok) {\r\n        // Call the function to update the user interface immediately without refreshing the page\r\n        getAllTodos();\r\n        setTodo({ text: \"\", status: \"pending\" }); // Clear input field after adding todo\r\n      } else {\r\n        console.error(\"Failed to add todo\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Add a task...\"\r\n        onChange={handleInputChange}\r\n        value={todo.text}\r\n      />\r\n      <button onClick={addNewTodo}>Add</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddTodo;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,OAAOA,CAAC;EAAEC;AAAY,CAAC,EAAE;EAAAC,EAAA;EAChC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC;IAC/BQ,IAAI,EAAE,EAAE;IACRC,MAAM,EAAE;EACV,CAAC,CAAC;;EAEF;EACA,SAASC,iBAAiBA,CAACC,CAAC,EAAE;IAC5BJ,OAAO,CAAC;MAAE,GAAGD,IAAI;MAAEE,IAAI,EAAEG,CAAC,CAACC,MAAM,CAACC;IAAM,CAAC,CAAC;EAC5C;;EAEA;EACA,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,YAAY,EAAE;QACzCC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACf,IAAI;MAC3B,CAAC,CAAC;MAEF,IAAIS,QAAQ,CAACO,EAAE,EAAE;QACf;QACAlB,WAAW,CAAC,CAAC;QACbG,OAAO,CAAC;UAAEC,IAAI,EAAE,EAAE;UAAEC,MAAM,EAAE;QAAU,CAAC,CAAC,CAAC,CAAC;MAC5C,CAAC,MAAM;QACLc,OAAO,CAACC,KAAK,CAAC,oBAAoB,CAAC;MACrC;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC;EACF,CAAC;EAED,oBACEtB,OAAA;IAAAuB,QAAA,gBACEvB,OAAA;MACEwB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,eAAe;MAC3BC,QAAQ,EAAElB,iBAAkB;MAC5BG,KAAK,EAAEP,IAAI,CAACE;IAAK;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC,eACF9B,OAAA;MAAQ+B,OAAO,EAAEnB,UAAW;MAAAW,QAAA,EAAC;IAAG;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtC,CAAC;AAEV;AAAC3B,EAAA,CA9CQF,OAAO;AAAA+B,EAAA,GAAP/B,OAAO;AAgDhB,eAAeA,OAAO;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}