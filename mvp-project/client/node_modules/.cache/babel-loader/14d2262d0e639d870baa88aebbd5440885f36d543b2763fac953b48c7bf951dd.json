{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alex0\\\\Desktop\\\\SHA-C22-1\\\\Week20\\\\FullStack-Overview\\\\client\\\\src\\\\components\\\\AddForm.js\",\n  _s = $RefreshSig$();\n// AddTodo component\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport App from \"../App\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddTodo({\n  getAllTodos\n}) {\n  _s();\n  const [todo, setTodo] = useState({\n    text: \"\",\n    status: Boolean\n  });\n  const [todos, setTodos] = useState([]);\n  // Handle input change when user types in a new task\n  function handleInputChange(e) {\n    setTodo({\n      ...todo,\n      text: e.target.value\n    });\n  }\n\n  // Function to add a new task\n  const addNewTodo = e => {\n    e.preventDefault();\n    axios.post(\"http://localhost:8000/todos/create\", todo).then(res => console.log(res.data)).catch(error => console.log(error));\n    // Add your logic here to send a request to add a new todo to the database\n\n    // Call the function to update the user interface immediately without refreshing the page\n    getAllTodos();\n  };\n\n  // getAllTodos();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Add a task...\",\n      onChange: handleInputChange,\n      value: todo.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"addbtn\",\n      onClick: addNewTodo,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: todo.text\n      }, todo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(AddTodo, \"kkqnxQAvxwTc5486y2g6NSf3gsc=\");\n_c = AddTodo;\nexport default AddTodo;\nvar _c;\n$RefreshReg$(_c, \"AddTodo\");","map":{"version":3,"names":["useState","axios","App","jsxDEV","_jsxDEV","AddTodo","getAllTodos","_s","todo","setTodo","text","status","Boolean","todos","setTodos","handleInputChange","e","target","value","addNewTodo","preventDefault","post","then","res","console","log","data","catch","error","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","id","onClick","map","_c","$RefreshReg$"],"sources":["C:/Users/alex0/Desktop/SHA-C22-1/Week20/FullStack-Overview/client/src/components/AddForm.js"],"sourcesContent":["// AddTodo component\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport App from \"../App\"\r\nimport \"./style.css\";\r\n\r\n\r\nfunction AddTodo({ getAllTodos }) {\r\n  const [todo, setTodo] = useState({\r\n    text: \"\",\r\n    status: Boolean\r\n  });\r\n  const [todos, setTodos] = useState([]);\r\n  // Handle input change when user types in a new task\r\n  function handleInputChange(e) {\r\n    setTodo({ ...todo, text: e.target.value });\r\n  \r\n  }\r\n  \r\n  // Function to add a new task\r\n  const addNewTodo = (e) => {\r\n    e.preventDefault();\r\n    axios\r\n    .post(\"http://localhost:8000/todos/create\",todo)\r\n    .then((res) => console.log(res.data))\r\n    .catch((error) => console.log(error));\r\n    // Add your logic here to send a request to add a new todo to the database\r\n    \r\n      \r\n\r\n    // Call the function to update the user interface immediately without refreshing the page\r\n    getAllTodos();\r\n    \r\n  }\r\n  \r\n  // getAllTodos();\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Add a task...\"\r\n        onChange={handleInputChange}\r\n        value={todo.text}\r\n      />\r\n      <button id=\"addbtn\" onClick={addNewTodo}>Add</button>\r\n      <ul>\r\n        {todos.map((todo) => (\r\n          <li key={todo.id}>{todo.text}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddTodo;"],"mappings":";;AAAA;AACA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,GAAG,MAAM,QAAQ;AACxB,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGrB,SAASC,OAAOA,CAAC;EAAEC;AAAY,CAAC,EAAE;EAAAC,EAAA;EAChC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC;IAC/BU,IAAI,EAAE,EAAE;IACRC,MAAM,EAAEC;EACV,CAAC,CAAC;EACF,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtC;EACA,SAASe,iBAAiBA,CAACC,CAAC,EAAE;IAC5BP,OAAO,CAAC;MAAE,GAAGD,IAAI;MAAEE,IAAI,EAAEM,CAAC,CAACC,MAAM,CAACC;IAAM,CAAC,CAAC;EAE5C;;EAEA;EACA,MAAMC,UAAU,GAAIH,CAAC,IAAK;IACxBA,CAAC,CAACI,cAAc,CAAC,CAAC;IAClBnB,KAAK,CACJoB,IAAI,CAAC,oCAAoC,EAACb,IAAI,CAAC,CAC/Cc,IAAI,CAAEC,GAAG,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACG,IAAI,CAAC,CAAC,CACpCC,KAAK,CAAEC,KAAK,IAAKJ,OAAO,CAACC,GAAG,CAACG,KAAK,CAAC,CAAC;IACrC;;IAIA;IACAtB,WAAW,CAAC,CAAC;EAEf,CAAC;;EAED;EACA,oBACEF,OAAA;IAAAyB,QAAA,gBACEzB,OAAA;MACE0B,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,eAAe;MAC3BC,QAAQ,EAAEjB,iBAAkB;MAC5BG,KAAK,EAAEV,IAAI,CAACE;IAAK;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC,eACFhC,OAAA;MAAQiC,EAAE,EAAC,QAAQ;MAACC,OAAO,EAAEnB,UAAW;MAAAU,QAAA,EAAC;IAAG;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACrDhC,OAAA;MAAAyB,QAAA,EACGhB,KAAK,CAAC0B,GAAG,CAAE/B,IAAI,iBACdJ,OAAA;QAAAyB,QAAA,EAAmBrB,IAAI,CAACE;MAAI,GAAnBF,IAAI,CAAC6B,EAAE;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiB,CAClC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAAC7B,EAAA,CA7CQF,OAAO;AAAAmC,EAAA,GAAPnC,OAAO;AA+ChB,eAAeA,OAAO;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}